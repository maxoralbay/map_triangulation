version: '3.8'

networks:
  project_network:
    driver: bridge

services:
  nginx:
    image: nginx:stable-alpine
    container_name: ks-nginx
    ports:
      - "80:80"
    depends_on:
      - php
    networks:
      - project_network
    volumes:
      - ./project:/app
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/logs:/var/log/nginx

  mysql:
    image: mysql:latest
    container_name: ks-mysql
    hostname: ks-mysql
    ports:
      - "3306:3306"
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
    volumes:
      - ./docker/mysql:/docker-entrypoint-initdb.d
    networks:
      - project_network
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ks-php
    environment:
        DATABASE_URL: mysql://root:secret@mysql:3306/db
        DB_HOST: mysql
        DB_PORT: 5432
        DB_DATABASE: db
        DB_USERNAME: postgres
        DB_PASSWORD: secret
        DB_DATABASE_TESTING: db-test
#    command: tail -f /dev/null
    ports:
      - "8000:8000"
    volumes:
      - ./docker/config/php.conf.ini:/usr/local/etc/php/conf.d/php.ini
      - ./project:/app
    networks:
      - project_network
    depends_on:
        - mysql
  vue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ks-vue
    ports:
      - "8080:8080"
    volumes:
      - ./project/Application/public:/app
    networks:
      - project_network
    command: npm run serve
volumes:
  mysql-data:
    driver: local

